# 워크플로(Workflows) 는 깃허브 액션의 기본 구성 단위이다.

name: docker-build # name of workflow

# 이벤트는 워크플로를 시작하는 트리거이다.
# 일반적인 이벤트에는 push, pull_request 및 일정이 포함된다.
# 현재는 'main' branch 에 대한 'push' 이벤트만 포함된 상태
on:
  push:
    branches: ['main', 'develop']

env:
  DOCKER_IMAGE: ghcr.io/yoonjunhyeok/kupply-front
  DOCKER_CONTAINER: kupply-front
  DEV_DOCKER_CONTAINER: kupply-front-dev

# 작업은 워크플로 내에서 실행되는 개별 작업이다. 러너라는 가상 머신에서 실행되며, 하나 이상의 단계를 포함할 수 있다.
# 작업은 종속성에 따라 병렬 또는 순차적으로 실행될 수 있다.
jobs:
  build: # define a job name
    runs-on: ubuntu-24.04
    outputs:
      image_tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set tag based on branch
        id: set_tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=dev" >> $GITHUB_OUTPUT
          fi

      - name: Setup Docker
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: build and push image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ steps.set_tag.outputs.tag }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: self-hosted
    steps:
      - name: setup .env
        run: |
          echo "REACT_APP_GOOGLE_ANALYTICS=${{ secrets.REACT_APP_GOOGLE_ANALYTICS }}" >> prod.env
          echo "REACT_APP_PHASE=prod" >> prod.env
          cat prod.env
      - name: Docker login to GHCR
        run: |
          echo ${{ secrets.GHCR_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Run Docker (Production)
        run: |
          docker stop ${{env.DOCKER_CONTAINER}} && docker rm ${{env.DOCKER_CONTAINER}} && docker rmi ${{env.DOCKER_IMAGE}}:latest
          docker run --env-file ./prod.env -d -p 3000:3000 --name ${{env.DOCKER_CONTAINER}} --network host --restart always ${{env.DOCKER_IMAGE}}:latest

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    needs: build
    runs-on: self-hosted
    steps:
      - name: setup .env
        run: |
          echo "PORT=3001" >> dev.env
          echo "REACT_APP_PHASE=dev" >> dev.env
          cat dev.env
      - name: Docker login to GHCR
        run: |
          echo ${{ secrets.GHCR_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Run Docker (Development)
        run: |
          docker stop ${{env.DEV_DOCKER_CONTAINER}} && docker rm ${{env.DEV_DOCKER_CONTAINER}} && docker rmi ${{env.DOCKER_IMAGE}}:dev
          docker run --env-file ./dev.env -d -p 3001:3001 --name ${{env.DEV_DOCKER_CONTAINER}} --network host --restart always ${{env.DOCKER_IMAGE}}:dev
